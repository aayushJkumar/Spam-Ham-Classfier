# -*- coding: utf-8 -*-
"""Spam Ham Classifier

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1B1FblADvW5J83AAnwUh5OSR7wcUBO0a-
"""

import pandas as pd

messages = pd.read_csv("/content/SMSSpamCollection",sep='\t',names=["label","message"])

messages.head(10)

import re
import nltk
nltk.download("stopwords")

from nltk.corpus import stopwords
from nltk.stem.porter import PorterStemmer
from nltk.stem import WordNetLemmatizer

ps=PorterStemmer()
lemmatizer=WordNetLemmatizer()

corpus=[]

nltk.download('popular')

for i in range(0,len(messages)):
  review=re.sub("[^a-zA-Z]"," ",messages['message'][i])
  review=review.lower()
  review=review.split()
  review=[lemmatizer.lemmatize(word) for word in review if not word in stopwords.words('english')]
  review=' '.join(review)
  corpus.append(review)

from sklearn.feature_extraction.text import CountVectorizer
cv = CountVectorizer(max_features=2500)
X = cv.fit_transform(corpus).toarray()

y=pd.get_dummies(messages['label'],drop_first=True)
y=y.values

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state = 0)

from sklearn.naive_bayes import MultinomialNB
spam_detect_model = MultinomialNB().fit(X_train, y_train)

y_pred=spam_detect_model.predict(X_test)

from sklearn.metrics import confusion_matrix
from sklearn.metrics import accuracy_score

confusion_m=confusion_matrix(y_test,y_pred)

confusion_m

acc=accuracy_score(y_test,y_pred)
acc

